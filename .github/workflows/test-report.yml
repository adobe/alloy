name: Functional Test Report
on:
  schedule:
    - cron: "12 9 * * *"
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_CAPABILITIES_OVERRIDES_PATH: "sauceLabsCapabilities.json"
  SAUCE_JOB: "Alloy Prod Workflow"
  ALLOY_ENV: prod

jobs:
  functional-test-report:
    name: "Functional Test"
    strategy:
      max-parallel: 4
      matrix:
        browsers:
          [
            "'saucelabs:Chrome@latest:Windows 10'",
            "'saucelabs:MicrosoftEdge@latest:Windows 10'",
            "'saucelabs:Firefox@latest:macOS 11.00'",
            "'saucelabs:Safari@latest:macOS 11.00'",
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset

      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{github.repository_owner}}

      - uses: nyaa8/package-version@v1

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run test:functional:build:prod

      - name: Install sauceCtl
        run: |
            npm install -g saucectl
            saucectl --version

      - name: Install TestCafe
        run: |
          npm install -g testcafe
          testcafe --version

      - name: Run Functional Test
        run: npx testcafe ${{ matrix.browsers }} -c 4 -r spec,junit:report.xml
        env:
          ALLOY_PROD_VERSION: ${{ env.PACKAGE_VERSION }}
          NPM_PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
          ALLOY_ENV: prod

      - name: Publish Results to Testspace
        run: testspace "[${{ github.workflow }}/${{ github.job}}]./report.xml"
        if: always()
