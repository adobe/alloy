name: Prod
on:
  schedule:
    - cron: "0 */24 * * *"
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_CAPABILITIES_OVERRIDES_PATH: "sauceLabsCapabilities.json"
  SAUCE_JOB: "Alloy Prod Workflow"
  ALLOY_ENV: prod

jobs:
  get-testing-tags:
    name: Fetch releases
    runs-on: ubuntu-latest
    outputs:
      matrixInput: ${{ steps.list-tags.outputs.matrixInput }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: npm install @octokit/rest semver
      - name: Retrieve tags
        id: list-tags
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const getTestingTags = require('./scripts/getTestingTags.js');
            const tagsToTest = await getTestingTags();
            const matrixInput = { include: tagsToTest.map(tag => ({tag})) }
            core.setOutput("matrixInput", JSON.stringify(matrixInput));
            console.log("matrixInput: ", matrixInput);

  functional_matrix:
    name: Funtional Test
    needs: get-testing-tags
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 15
      matrix:
        alloytags: ${{ fromJSON(needs.get-testing-tags.outputs.matrixInput).include }}
        browsers:
          [
            "'saucelabs:Chrome@latest:Windows 10'",
            "'saucelabs:MicrosoftEdge@latest:Windows 10'",
            "'saucelabs:IE@latest:Windows 10'",
            "'saucelabs:Firefox@latest:Windows 10'",
            "'saucelabs:Safari@latest:macOS 11.00'",
          ]

    steps:
      - name: Create a workflow dispatch event with ${{ matrix.alloytags.tag }}
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ matrix.alloytags.tag }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{github.repository_owner}}
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Get version from package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      # - uses: browser-actions/setup-geckodriver@latest
      #   with:
      #     geckodriver-version: "0.27.0"
      - name: Install TestCafe dependencies
        run: |
          npm install testcafe-reporter-junit --save-dev
      - name: Build
        run: npm run test:functional:build:prod
      - name: Run TestCafe Tests
        run: npx testcafe -e -q attemptLimit=5,successThreshold=1 -c 3 ${{ matrix.browsers }} --disable-page-caching -r spec,junit:report.xml
        env:
          ALLOY_PROD_VERSION: ${{ steps.package-version.outputs.current-version }}
      - name: Publish Results to Testspace
        run: testspace report.xml
        if: always()
      - uses: craftech-io/slack-action@v1
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: failure
        if: failure()