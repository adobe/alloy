name: Prod
on:
  schedule:
    - cron: "0 */18 * * *"
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_CAPABILITIES_OVERRIDES_PATH: "sauceLabsCapabilities.json"
  SAUCE_JOB: "Alloy Prod Workflow"
  ALLOY_ENV: prod

jobs:
  get-testing-tags:
    name: Fetch releases
    runs-on: ubuntu-latest
    outputs:
      matrixInput: ${{ steps.list-tags.outputs.matrixInput }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: npm install @octokit/rest semver
      - uses: actions/upload-artifact@v3
        with:
          name: sauce-config
          path: .sauce
      - uses: actions/upload-artifact@v3
        with:
          name: sauce-ignore
          path: .sauceignore
      - name: Retrieve tags
        id: list-tags
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const getTestingTags = require('./scripts/getTestingTags.js');
            const tagsToTest = await getTestingTags();
            const matrixInput = { include: tagsToTest.map(tag => ({tag})) }
            core.setOutput("matrixInput", JSON.stringify(matrixInput));
            console.log("matrixInput: ", matrixInput);

  functional_matrix:
    name: Alloy
    strategy:
      max-parallel: 20
      matrix: ${{ fromJSON(needs.get-testing-tags.outputs.matrixInput) }}
    needs: get-testing-tags
    runs-on: ubuntu-latest
    steps:
      - name: Create a workflow dispatch event with ${{ matrix.tag }}
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ matrix.tag }}
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - uses: nyaa8/package-version@v1
      - uses: actions/download-artifact@v3
        with:
          name: sauce-config
          path: .sauce
      - name: Remove File
        uses: JesseTG/rm@v1.0.3
        with:
          path: .sauceignore
      - uses: actions/download-artifact@v3
        with:
          name: sauce-ignore
          path: .sauceignore
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:prod
        env:
          ALLOY_PROD_VERSION: ${{ env.PACKAGE_VERSION }}
      - name: Initiate Saucelabs Functional Tests
        timeout-minutes: 20
        uses: saucelabs/saucectl-run-action@v2
        with:
          sauce-username: ${{ secrets.SAUCE_USERNAME }}
          sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
          saucectl-version: v0.111.0
          config-file: .sauce/prod.yml
        env:
          ALLOY_PROD_VERSION: ${{ env.PACKAGE_VERSION }}
          NPM_PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
          ALLOY_ENV: prod
      - uses: craftech-io/slack-action@v1
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: failure
        if: failure()
