name: Dev
on:
  push:
  workflow_dispatch:
env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_JOB: "Alloy Dev Workflow"
  SAUCE_CAPABILITIES_OVERRIDES_PATH: "sauceLabsCapabilities.json"
  EDGE_BASE_PATH: ee-pre-prd
  ALLOY_ENV: int

jobs:
  unit-test:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:int
      - uses: saucelabs/sauce-connect-action@v2.2.1
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelName: $GITHUB_JOB
      - name: Run Unit Test
        run: npx karma start karma.saucelabs.conf.js --single-run
        env:
          BUILD_NUMBER: $GITHUB_RUN_NUMBER
          BUILD_ID: $GITHUB_RUN_ID
          JOB_NUMBER: $GITHUB_JOB

  functional_safari:
    name: Safari
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Get version from package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:int
      - name: Run Functional Test
        timeout-minutes: 20
        run: npx testcafe 'saucelabs:Safari@latest:macOS 11.00' -c 5 --speed 0.5

  functional_firefox:
    name: Firefox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Get version from package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:int
      - name: Run Functional Test
        timeout-minutes: 20
        run: npx testcafe 'saucelabs:Firefox@latest:macOS 11.00' -c 5 --speed 0.05

  functional_chrome:
    name: Chrome
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Get version from package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:int
      - name: Run Functional Test
        timeout-minutes: 20
        run: npx testcafe 'saucelabs:Chrome@latest:Windows 10' -c 5 --speed 0.5

  functional_edge:
    name: Edge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Get version from package
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run test:functional:build:int
      - name: Run Functional Test
        timeout-minutes: 20
        run: npx testcafe 'saucelabs:MicrosoftEdge@latest:Windows 10' -c 5 --speed 0.5

