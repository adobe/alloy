name: PR-Tests
on:
  pull_request_target:
    branches: [master]

    # Is this required?
    paths-ignore:
      - ".github/**"
      - ".hosting/**"

env:
  RESOURCE_GROUP: Alloy
  STORAGE_NAME: alloypr${{ github.event.pull_request.number }}

jobs:
  build-head:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "master"
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build:prod
      - name: Build Sandbox
        run: cd sandbox && npm run build && cd ..
      - name: Upload bundle-stats.json
        uses: actions/upload-artifact@v1
        with:
          name: head-stats
          path: ./bundle-stats.json
      - name: Upload sandbox
        uses: actions/upload-artifact@v1
        with:
          name: sandbox
          path: ./sandbox/public

  e2e-test:
    name: "E2E Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "${{github.event.pull_request.head.ref}}"
          repository: "${{github.event.pull_request.head.repo.full_name}}"
      - uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build:prod
      - name: Test
        run: npm run functional:ci

  e2e-test-browserstack:
    name: "E2E Tests BrowserStack"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: "${{github.event.pull_request.head.ref}}"
        repository: "${{github.event.pull_request.head.repo.full_name}}"
    - uses: actions/cache@v2
      id: node-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Build
      run: npm run build:prod
    - name: 'BrowserStack Env Setup'
      uses: 'browserstack/github-actions/setup-env@master'
      with:
        username:  ${{ secrets.BROWSERSTACK_USERNAME }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        build-name: 'alloypr${{ github.event.pull_request.number }}'
        project-name: 'Alloy'
    - name: 'BrowserStackLocal Setup'
      uses: 'browserstack/github-actions/setup-local@master'
      with:
        local-testing: start
        local-identifier: random
    - name: Test ie
      run: |
        export BROWSERSTACK_USE_AUTOMATE="1"
        export BROWSERSTACK_DISPLAY_RESOLUTION="1024x768"
        npm run functional:ci:bs
    - name: 'BrowserStackLocal Stop'
      uses: 'browserstack/github-actions/setup-local@master'
      with:
        local-testing: stop

  unit-test-saucelabs:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: saucelabs/sauce-connect-action@master
      with:
      username: ${{ secrets.SAUCE_USERNAME }}
      accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
      tunnelIdentifier: github-action-tunnel
    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: "Run Unit Test"
      run: npm run test:saucelabs

  build-base:
    name: "Build base"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: "${{github.event.pull_request.base.ref}}"
        repository: "${{github.event.pull_request.base.repo.full_name}}"
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - uses: actions/cache@v2
      id: node-cache
      with:
        path: "**/node_modules"
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Build
      run: npm run build
    - name: Upload bundle-stats.json
      uses: actions/upload-artifact@v1
      with:
        name: base-stats
        path: ./bundle-stats.json

  compare:
    name: "Compare base & head bundle sizes"
    runs-on: ubuntu-latest
    needs: [build-base, build-head]
    steps:
    - uses: actions/checkout@v1
    - name: Download base artifact
      uses: actions/download-artifact@v1
      with:
        name: base-stats
    - name: Download head artifact
      uses: actions/download-artifact@v1
      with:
        name: head-stats
    - name: Diff between base & head
      uses: weltenwort/webpack-stats-diff-action@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        base_stats_path: ./base-stats/bundle-stats.json
        head_stats_path: ./head-stats/bundle-stats.json

  # preview:
  #   name: "Preview"
  #   runs-on: ubuntu-latest
  #   needs: [build-head]
  #   steps:
  #   - name: Download base artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: dist
  #   - name: Azure Login
  #     uses: azure/login@v1.1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #   - name: Azure CLI script
  #     uses: azure/CLI@v1
  #     with:
  #       azcliversion: 2.0.72
  #       inlineScript: |
  #       az storage account create --kind StorageV2 --name ${{ env.STORAGE_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --subscription ${{ SECRETS.AZURE_SUBSCRIPTION_ID }}
  #       az storage blob service-properties update --account-name ${{ env.STORAGE_NAME }} --static-website --404-document 404.html --index-document index.html --subscription ${{ SECRETS.AZURE_SUBSCRIPTION_ID }}
  #       export key=$(az storage account keys list --account-name ${{ env.STORAGE_NAME }} --resource-group  ${{ env.RESOURCE_GROUP }} --subscription ${{ SECRETS.AZURE_SUBSCRIPTION_ID }} --query "[0].value")
  #       az storage blob upload-batch -d '$web' -s ./dist/ --account-name ${{ env.STORAGE_NAME }} --account-key $key --subscription ${{ SECRETS.AZURE_SUBSCRIPTION_ID }}