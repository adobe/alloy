/* eslint-disable */
// Source: https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js

!(function (e, n) {
  typeof exports === "object" && typeof module !== "undefined"
    ? n()
    : typeof define === "function" && define.amd
      ? define(n)
      : n();
})(0, function () {
  function e(e) {
    const n = this.constructor;
    return this.then(
      function (t) {
        return n.resolve(e()).then(function () {
          return t;
        });
      },
      function (t) {
        return n.resolve(e()).then(function () {
          return n.reject(t);
        });
      },
    );
  }
  function n(e) {
    return !(!e || typeof e.length === "undefined");
  }
  function t() {}
  function o(e) {
    if (!(this instanceof o))
      throw new TypeError("Promises must be constructed via new");
    if (typeof e !== "function") throw new TypeError("not a function");
    (this._state = 0),
      (this._handled = !1),
      (this._value = undefined),
      (this._deferreds = []),
      c(e, this);
  }
  function r(e, n) {
    for (; e._state === 3; ) e = e._value;
    e._state !== 0
      ? ((e._handled = !0),
        o._immediateFn(function () {
          const t = e._state === 1 ? n.onFulfilled : n.onRejected;
          if (t !== null) {
            let o;
            try {
              o = t(e._value);
            } catch (r) {
              return void f(n.promise, r);
            }
            i(n.promise, o);
          } else (e._state === 1 ? i : f)(n.promise, e._value);
        }))
      : e._deferreds.push(n);
  }
  function i(e, n) {
    try {
      if (n === e)
        throw new TypeError("A promise cannot be resolved with itself.");
      if (n && (typeof n === "object" || typeof n === "function")) {
        const t = n.then;
        if (n instanceof o) return (e._state = 3), (e._value = n), void u(e);
        if (typeof t === "function")
          return void c(
            (function (e, n) {
              return function () {
                e.apply(n, arguments);
              };
            })(t, n),
            e,
          );
      }
      (e._state = 1), (e._value = n), u(e);
    } catch (r) {
      f(e, r);
    }
  }
  function f(e, n) {
    (e._state = 2), (e._value = n), u(e);
  }
  function u(e) {
    e._state === 2 &&
      e._deferreds.length === 0 &&
      o._immediateFn(function () {
        e._handled || o._unhandledRejectionFn(e._value);
      });
    for (let n = 0, t = e._deferreds.length; t > n; n++) r(e, e._deferreds[n]);
    e._deferreds = null;
  }
  function c(e, n) {
    let t = !1;
    try {
      e(
        function (e) {
          t || ((t = !0), i(n, e));
        },
        function (e) {
          t || ((t = !0), f(n, e));
        },
      );
    } catch (o) {
      if (t) return;
      (t = !0), f(n, o);
    }
  }
  const a = setTimeout;
  (o.prototype.catch = function (e) {
    return this.then(null, e);
  }),
    (o.prototype.then = function (e, n) {
      const o = new this.constructor(t);
      return (
        r(
          this,
          new (function (e, n, t) {
            (this.onFulfilled = typeof e === "function" ? e : null),
              (this.onRejected = typeof n === "function" ? n : null),
              (this.promise = t);
          })(e, n, o),
        ),
        o
      );
    }),
    (o.prototype.finally = e),
    (o.all = function (e) {
      return new o(function (t, o) {
        function r(e, n) {
          try {
            if (n && (typeof n === "object" || typeof n === "function")) {
              const u = n.then;
              if (typeof u === "function")
                return void u.call(
                  n,
                  function (n) {
                    r(e, n);
                  },
                  o,
                );
            }
            (i[e] = n), --f == 0 && t(i);
          } catch (c) {
            o(c);
          }
        }
        if (!n(e)) return o(new TypeError("Promise.all accepts an array"));
        var i = Array.prototype.slice.call(e);
        if (i.length === 0) return t([]);
        for (var f = i.length, u = 0; i.length > u; u++) r(u, i[u]);
      });
    }),
    (o.resolve = function (e) {
      return e && typeof e === "object" && e.constructor === o
        ? e
        : new o(function (n) {
            n(e);
          });
    }),
    (o.reject = function (e) {
      return new o(function (n, t) {
        t(e);
      });
    }),
    (o.race = function (e) {
      return new o(function (t, r) {
        if (!n(e)) return r(new TypeError("Promise.race accepts an array"));
        for (let i = 0, f = e.length; f > i; i++) o.resolve(e[i]).then(t, r);
      });
    }),
    (o._immediateFn =
      (typeof setImmediate === "function" &&
        function (e) {
          setImmediate(e);
        }) ||
      function (e) {
        a(e, 0);
      }),
    (o._unhandledRejectionFn = function (e) {
      void 0 !== console &&
        console &&
        console.warn("Possible Unhandled Promise Rejection:", e);
    });
  const l = (function () {
    if (typeof self !== "undefined") return self;
    if (typeof window !== "undefined") return window;
    if (typeof global !== "undefined") return global;
    throw Error("unable to locate global object");
  })();
  "Promise" in l
    ? l.Promise.prototype.finally || (l.Promise.prototype.finally = e)
    : (l.Promise = o);
});
